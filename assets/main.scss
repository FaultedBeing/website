---
# This front matter is required for Jekyll to process the file.
---

// This line imports all the default theme styles.
@import "minima";

//
// --- Dark Mode Theme & Custom Styles ---
//

// 1. Define the dark mode color palette using CSS variables.
:root {
  --background-color: #1a1a1a;
  --text-color: #e0e0e0;
  --heading-color: #ffffff;
  --link-color: #40a0cc;
  --link-hover-color: #0ed1eb;
  --border-color: #444444;
  --card-background-color: #2c2c2c;
  --subtle-text-color: #9e9e9e;
  --hr-color: #333333;
  --title-color:  #ebf3ff;
}

// 2. Apply the variables to the site's main elements.
body {
  background-color: var(--background-color);
  color: var(--text-color);
}

h1, h2, h3, h4, h5, h6 {
  color: var(--heading-color);
}

// Specifically target the site title in the header to ensure it overrides the theme.
.site-header .site-title {
  color: var(--title-color);
}

a {
  color: var(--link-color);
  text-decoration: none;
}

a:hover, .site-header .site-title:hover {
  color: var(--title-color);
  text-decoration: underline;
}

a:hover {
  color: var(--link-hover-color);
}

hr {
  border: 0;
  border-top: 1px solid var(--hr-color);
}

.site-header {
  border-bottom-color: var(--border-color);
}

.site-footer {
  border-top-color: var(--border-color);
}

// Specifically target the header navigation links
.page-link {
  color: var(--text-color);
}

// Specifically target the header navigation links with a more specific rule
.site-header .page-link {
  color: var(--text-color);
}

.page-link:hover {
  color: var(--link-hover-color);
}


// 3. Your custom component styles, now using the dark mode variables.

.project-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
  list-style: none;
  padding: 0;
  margin-top: 1em;
}

.project-box {
  display: block;
  border: 1px solid var(--border-color);
  background-color: var(--card-background-color);
  color: var(--text-color);
  border-radius: 8px;
  overflow: hidden;
  text-decoration: none;
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.project-box:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.project-box .project-image {
  height: 150px;
  background-size: cover;
  background-position: center;
}

.project-box .project-title {
  padding: 15px;
  background-color: var(--card-background-color);
}

.project-box h3 {
  margin: 0;
  font-size: 1.1em;
}

.project-updates-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}

.update-card-link {
  text-decoration: none;
  color: inherit;
}

.update-item-card {
  border: 1px solid var(--border-color);
  background-color: var(--card-background-color);
  border-radius: 8px;
  overflow: hidden;
  height: 100%;
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.update-item-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.update-card-image {
  height: 150px;
  background-size: cover;
  background-position: center;
  border-bottom: 1px solid var(--border-color);
}

.update-card-content {
  padding: 15px;
}

.update-title {
  margin-bottom: 0.25em;
}

.update-meta {
  color: var(--subtle-text-color);
  font-size: 0.9em;
  margin-top: 0;
}


code {
  background-color: #333; // A darker background
  color: #f0a44c;         // A distinct color for the text
  border: 1px solid var(--border-color);
  border-radius: 3px;
  padding: 0.1em 0.3em;
}
// Style for larger code blocks (the ``` highlight blocks)
.highlight {
  background: #2d2d2d; // A slightly different dark background
  padding: 1em;
  border-radius: 8px;

  // This overrides the theme's syntax highlighting colors
  pre, code {
    color: var(--text-color); // Use your main light text color
    background-color: transparent !important; // Remove any inner background
  }
}
// You can also fine-tune specific token colors if you wish
.highlight .nf { color: #78a9ff; } // Function names
.highlight .s { color: #f0a44c; }  // Strings
.highlight .k { color: #ff79c6; }  // Keywords like 'def', 'end'
.highlight .c1 { color: #888; }   // Comments

// In assets/main.scss, add this at the bottom


.post-preview-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
  margin-top: 1em;
}

.post-preview-box {
  display: flex;
  flex-direction: column;
  /* REMOVED: height: 250px; */ /* The box will now size to its content */
  background-color: var(--card-background-color);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  text-decoration: none;
  color: inherit;
  overflow: hidden;
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.post-preview-box:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
  text-decoration: none;
}

.post-preview-title {
  padding: 15px;
  border-bottom: 1px solid var(--border-color);
}

.post-preview-title h3 {
  margin: 0;
  color: var(--heading-color);
  font-size: 1.1em;
}

.post-preview-content {
  padding: 15px;
  max-height: 100px; /* ADDED: This limits the text height */
  overflow: hidden; /* ADDED: This is necessary for the fade effect to work on overflowing text */
  position: relative; /* Required for the fade effect */
}

.post-preview-content p {
  color: var(--subtle-text-color);
  font-size: 0.9em;
  margin: 0;
}

/* This creates the fade-out effect */
.post-preview-content::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 60%; /* Increased height for a smoother fade */
  background: linear-gradient(to bottom, transparent, var(--card-background-color));
}
